apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file("keystore.properties")
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 31
    defaultConfig {
        applicationId "net.nuhkoca.firebaseappdistributionsample"
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 9
        versionName getVersionNameValue()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            storeFile file("$rootDir/keystore/debug.keystore")
        }

        staging {
            storeFile file("$rootDir/" + keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyPassword keystoreProperties['keyPassword']
            keyAlias keystoreProperties['keyAlias']
        }

        release {}
    }

    buildTypes {
        release {
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            shrinkResources false
            debuggable true
            signingConfig signingConfigs.debug
        }

        staging {
            initWith debug
            matchingFallbacks = ['debug']
            signingConfig signingConfigs.staging
        }
    }

    flavorDimensions "dimension"
    productFlavors {
        dev {
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev-${gitSha()}"
            dimension "dimension"
        }

        prod {
            applicationIdSuffix ".prod"
            versionNameSuffix "-prod-${gitSha()}"
            dimension "dimension"
        }

        beta {
            applicationIdSuffix ".beta"
            versionNameSuffix "-beta-${gitSha()}"
            dimension "dimension"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    implementation 'com.google.firebase:firebase-analytics:21.1.0'

    testImplementation 'junit:junit:4.13.2'

    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
}

static def gitSha() {
    return 'git rev-parse --short HEAD'.execute().text.trim()
}

static def getVersionNameValue() {
    def versionMajor = 1
    def versionMinor = 0
    def versionPatch = 0
    return "${versionMajor}.${versionMinor}.${versionPatch}"
}
